What was your overall strategy?
-I used the sample code on the HW1 description and implemented a switch-case state machine in the interrupt handler. I kept most things the same otherwise.
	Every time the interrupt handler was called it would toggle the LED on or off no matter what state it was coming from or going to.
	The state would set the length of the next blink_count as a multiple of blink_interval.
	Each state had some logic (or not) to determine what the next state to go to was.
	
What global variables did you use to keep track of the state of the system between WDT interrupts?
-I used 2 global variables, state and count.
	state was used as an argument to the switch statement on the state machine. Logic in each case would determine what the next state was. I used ascii values stored in a character variable to define each state.
	count was used 1-3 to count how many times the MSP430 had flashed in the first S and in the O, and 4-6 to determine how many times it had flashed in the second S.
	
What hardware did you use and how was it connected (for this HW the answer is probably to just way which on-board LED you used)
-I used an LED connected in series on a breadboard with a 1 KOhm resistor connected to the output of P1.0. It blinked at the same time as the onboard LED1.